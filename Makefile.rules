# In this file we define which of our own applications/tools/test should be built. 
# For docs see: http://software.intel.com/sites/landingpage/pintool/docs/62141/Pin/html/index.html#AddingTests
# For a complex example see: pin/source/tools/SimpleExamples/makefile.rules

# Paths for support libraries.
SUPPORT_REL_PATH = ./support
SUPPORT_PATH = $(realpath $(SUPPORT_REL_PATH))
LIBDFT_PATH = $(realpath $(SUPPORT_PATH)/libdft/src)

# Turns pintool.log output off.
LOGGING_FLAGS = -DNO_PINTOOL_LOG

# Pin Makefile variables.
TOOL_ROOTS := dtracker #heatmap-toy bbl-toy trace
APP_ROOTS := 
TEST_ROOTS := 
TOOL_CXXFLAGS += $(LOGGING_FLAGS) -DCUSTOM_TAGS_FDOFFSET -std=c++11 -I$(LIBDFT_PATH) -I./include

#######################################################################
# Data Tracker.
#######################################################################
DTRACKER_HOOKS := $(OBJDIR)hooks/dtracker_openclose$(OBJ_SUFFIX)
DTRACKER_HOOKS += $(OBJDIR)hooks/dtracker_read$(OBJ_SUFFIX) $(OBJDIR)hooks/dtracker_write$(OBJ_SUFFIX)
DTRACKER_HOOKS += $(OBJDIR)hooks/dtracker_mmap$(OBJ_SUFFIX)
DTRACKER_DEBUG := $(OBJDIR)dtracker_debug$(OBJ_SUFFIX)

$(OBJDIR)dtracker$(OBJ_SUFFIX): dtracker.cpp | $(OBJDIR)hooks
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)dtracker$(PINTOOL_SUFFIX): $(OBJDIR)dtracker$(OBJ_SUFFIX) $(OBJDIR)osutils$(OBJ_SUFFIX) $(DTRACKER_HOOKS) $(DTRACKER_DEBUG)
	$(LINKER) $(TOOL_LDFLAGS) $(LINK_EXE)$@ $(^:%.h=) $(TOOL_LPATHS) -L$(LIBDFT_PATH) -ldft $(TOOL_LIBS)

#######################################################################
# jsoncpp
#######################################################################
$(OBJDIR)jsoncpp$(OBJ_SUFFIX): jsoncpp.cpp include/json/json.h
	$(CXX) -I./include $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

jsoncpp.cpp: support-jsoncpp
include/json/json.h: support-jsoncpp

#######################################################################
# Directories.
#######################################################################
$(OBJDIR)hooks:
	mkdir -p $@

#######################################################################
# Generic rules for support libraries.
#######################################################################
SUPPORT_VARS += CC="$(CC)" CFLAGS="$(TOOL_CFLAGS)"
SUPPORT_VARS += CXX="$(CXX)" CXXFLAGS="$(TOOL_CXXFLAGS)"

.PHONY: support-%
support-%:
	$(MAKE) -C support -f makefile.$*

.PHONY: help
help:
	$(info Some potentially useful targets:)
	$(info - support : Builds libraries to be used for writing/compiling pin tools.)
	$(info - support-clean : Remove the built libraries.)
	$(info 		)
	$(info Some potentially useful options:)
	$(info - DEBUG=1 : Turns off optimizations and enables debug flags.)
	$(info - USE_GLIB=1 : Enable compile/linking flags for glib.)

# vim: ai:ts=4:sw=4:et!:ft=make
